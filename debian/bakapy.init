#!/bin/sh
set -e

### BEGIN INIT INFO
# Provides:           bakapy
# Required-Start:     $syslog $remote_fs
# Required-Stop:      $syslog $remote_fs
# Should-Start:       cgroupfs-mount cgroup-lite
# Should-Stop:        cgroupfs-mount cgroup-lite
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Create lightweight, portable, self-sufficient containers.
# Description:
#  Bakapy backup framework
### END INIT INFO

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

BASE=bakapy-scheduler

# modify these in /etc/default/$BASE (/etc/default/bakapy)
BAKAPY=/usr/bin/$BASE
# This is the pid file created/managed by start-stop-daemon
BAKAPY_SSD_PIDFILE=/var/run/$BASE-ssd.pid
BAKAPY_LOGFILE=/var/log/$BASE.log
BAKAPY_OPTS="--config=/etc/bakapy/bakapy.conf --loglevel=info"
BAKAPY_DESC="Bakapy"

# Get lsb functions
. /lib/lsb/init-functions

if [ -f /etc/default/$BASE ]; then
    . /etc/default/$BASE
fi

# see also init_is_upstart in /lib/lsb/init-functions (which isn't available in Ubuntu 12.04, or we'd use it)
if [ -x /sbin/initctl ] && /sbin/initctl version 2>/dev/null | grep -q upstart; then
    log_failure_msg "$BAKAPY_DESC is managed via upstart, try using service $BASE $1"
    exit 1
fi

# Check bakapy is present
if [ ! -x $BAKAPY ]; then
    log_failure_msg "$BAKAPY not present or not executable"
    exit 1
fi

fail_unless_root() {
    if [ "$(id -u)" != '0' ]; then
        log_failure_msg "$BAKAPY_DESC must be run as root"
        exit 1
    fi
}

case "$1" in
    start)
        fail_unless_root

        ulimit -n 1048576
        if [ "$BASH" ]; then
            ulimit -u 1048576
        else
            ulimit -p 1048576
        fi
        log_begin_msg "Starting $BAKAPY_DESC: $BASE"
        start-stop-daemon --start --background \
            --no-close \
            --exec "$BAKAPY" \
            --pidfile "$BAKAPY_SSD_PIDFILE" \
            --make-pidfile \
            -- $BAKAPY_OPTS >> "$BAKAPY_LOGFILE" 2>&1
        log_end_msg $?
        ;;

    stop)
        fail_unless_root
        log_begin_msg "Stopping $BAKAPY_DESC: $BASE"
        start-stop-daemon --stop --pidfile "$BAKAPY_SSD_PIDFILE"
        log_end_msg $?
        ;;

    restart)
        fail_unless_root
        bakapy_pid=`cat "$BAKAPY_SSD_PIDFILE" 2>/dev/null`
        [ -n "$bakapy_pid" ] \
            && ps -p $bakapy_pid > /dev/null 2>&1 \
            && $0 stop
        $0 start
        ;;

    force-reload)
        fail_unless_root
        $0 restart
        ;;

    status)
        status_of_proc -p "$BAKAPY_SSD_PIDFILE" "$BAKAPY" "$BAKAPY_DESC"
        ;;

    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac
